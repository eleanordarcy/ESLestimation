rho1 <- rho2 <- sig1 <- sig2 <- sig3 <- sig4 <- sig5 <- sig6 <- c()
rho1 <- a1 + b1*sin(((2*pi)/f)*(x$day[i]-p1))
rho2 <- a2 + b2*sin(((2*pi)/f)*(x$day[i]-p2))
sig1 <- matrix(c(1,rho1,rho1,1), nrow=2)
sig2 <- matrix(c(1,rho1,rho2,rho1,1,rho1,rho2,rho1,1), nrow=3)
sig3 <- matrix(c(1,rho1,rho2,rho3,rho1,1,rho1,rho2,rho2,rho1,1,rho1,rho3,rho2,rho1,1), nrow=4)
sig4 <- matrix(c(1,rho1,rho2,rho3,rho4,rho1,1,rho1,rho2,rho3,rho2,rho1,1,rho1,rho2,rho3,rho2,rho1,1,rho1,rho4,rho3,rho2,rho1,1), nrow=5)
sig5 <- matrix(c(1,rho1,rho2,rho3,rho4,rho5,
rho1,1,rho1,rho2,rho3,rho4,
rho2,rho1,1,rho1,rho2,rho3,
rho3,rho2,rho1,1,rho1,rho2,
rho4,rho3,rho2,rho1,1,rho1,
rho5,rho4,rho3,rho2,rho1,1), nrow=6)
sig6 <- matrix(c(1,rho1,rho2,rho3,rho4,rho5,rho6,
rho1,1,rho1,rho2,rho3,rho4,rho5,
rho2,rho1,1,rho1,rho2,rho3,rho4,
rho3,rho2,rho1,1,rho1,rho2,rho3,
rho4,rho3,rho2,rho1,1,rho1,rho2,
rho5,rho4,rho3,rho2,rho1,1,rho1,
rho6,rho5,rho4,rho3,rho2,rho1,1), nrow=7)
det1[i] <- det(sig1)
det2[i] <- det(sig2)
det3[i] <- det(sig3)
det4[i] <- det(sig4)
det5[i] <- det(sig5)
det6[i] <- det(sig6)
}
if( all(det1 > 0) & all(det2 >0 ) & all(det3 >0 ) & all(det4 >0 ) & all(det5 >0 ) & all(det6 >0 )  ){
if( all(abs(rho1) < 1) & all(abs(rho2) < 1)  & all(abs(rho3) < 1) & all(abs(rho4) < 1) & all(abs(rho5) < 1) & all(abs(rho6) < 1) ){
rho1 <- a1 + b1*sin(((2*pi)/f)*(x$day[1]-p1))
rho2 <- a2 + b2*sin(((2*pi)/f)*(x$day[1]-p2))
sig1 <- matrix(c(1,rho1,rho1,1), nrow=2)
sig2 <- matrix(c(1,rho1,rho2,rho1,1,rho1,rho2,rho1,1), nrow=3)
sig3 <- matrix(c(1,rho1,rho2,rho3,rho1,1,rho1,rho2,rho2,rho1,1,rho1,rho3,rho2,rho1,1), nrow=4)
sig4 <- matrix(c(1,rho1,rho2,rho3,rho4,rho1,1,rho1,rho2,rho3,rho2,rho1,1,rho1,rho2,rho3,rho2,rho1,1,rho1,rho4,rho3,rho2,rho1,1), nrow=5)
sig5 <- matrix(c(1,rho1,rho2,rho3,rho4,rho5,
rho1,1,rho1,rho2,rho3,rho4,
rho2,rho1,1,rho1,rho2,rho3,
rho3,rho2,rho1,1,rho1,rho2,
rho4,rho3,rho2,rho1,1,rho1,
rho5,rho4,rho3,rho2,rho1,1), nrow=6)
sig6 <- matrix(c(1,rho1,rho2,rho3,rho4,rho5,rho6,
rho1,1,rho1,rho2,rho3,rho4,rho5,
rho2,rho1,1,rho1,rho2,rho3,rho4,
rho3,rho2,rho1,1,rho1,rho2,rho3,
rho4,rho3,rho2,rho1,1,rho1,rho2,
rho5,rho4,rho3,rho2,rho1,1,rho1,
rho6,rho5,rho4,rho3,rho2,rho1,1), nrow=7)
l[1] <- log(dmvnorm(x=cbind(x$normal[1],x$normal[2],x$normal[3],x$normal[4],x$normal[5],x$normal[6],x$normal[7]),sigma=sig6))
for( i in 2:(length(x$skews)-6) ){
rho1 <- rho2 <- sig1 <- sig2 <- sig3 <- sig4 <- sig5 <- sig6 <- c()
if( abs(difftime(x$datetime[i], x$datetime[i+1], unit='hours')) > 15 | abs(difftime(x$datetime[i+1], x$datetime[i+2], unit='hours')) > 15 | abs(difftime(x$datetime[i+2], x$datetime[i+3], unit='hours')) > 15
| abs(difftime(x$datetime[i+3], x$datetime[i+4], unit='hours')) > 15 | abs(difftime(x$datetime[i+4], x$datetime[i+5], unit='hours')) > 15 | abs(difftime(x$datetime[i+5], x$datetime[i+6], unit='hours')) > 15 ){
l[i] <- NA
}
else{
rho1 <- a1 + b1*sin(((2*pi)/f)*(x$day[i]-p1))
rho2 <- a2 + b2*sin(((2*pi)/f)*(x$day[i]-p2))
sig1 <- matrix(c(1,rho1,rho1,1), nrow=2)
sig2 <- matrix(c(1,rho1,rho2,rho1,1,rho1,rho2,rho1,1), nrow=3)
sig3 <- matrix(c(1,rho1,rho2,rho3,rho1,1,rho1,rho2,rho2,rho1,1,rho1,rho3,rho2,rho1,1), nrow=4)
sig4 <- matrix(c(1,rho1,rho2,rho3,rho4,rho1,1,rho1,rho2,rho3,rho2,rho1,1,rho1,rho2,rho3,rho2,rho1,1,rho1,rho4,rho3,rho2,rho1,1), nrow=5)
sig5 <- matrix(c(1,rho1,rho2,rho3,rho4,rho5,
rho1,1,rho1,rho2,rho3,rho4,
rho2,rho1,1,rho1,rho2,rho3,
rho3,rho2,rho1,1,rho1,rho2,
rho4,rho3,rho2,rho1,1,rho1,
rho5,rho4,rho3,rho2,rho1,1), nrow=6)
sig6 <- matrix(c(1,rho1,rho2,rho3,rho4,rho5,rho6,
rho1,1,rho1,rho2,rho3,rho4,rho5,
rho2,rho1,1,rho1,rho2,rho3,rho4,
rho3,rho2,rho1,1,rho1,rho2,rho3,
rho4,rho3,rho2,rho1,1,rho1,rho2,
rho5,rho4,rho3,rho2,rho1,1,rho1,
rho6,rho5,rho4,rho3,rho2,rho1,1), nrow=7)
l[i] <- log(dmvnorm(x=cbind(x$normal[i],x$normal[i+1],x$normal[i+2],x$normal[i+3],x$normal[i+4],x$normal[i+5],x$normal[i+6]),sigma=sig6)/dmvnorm(x=cbind(x$normal[i],x$normal[i+1],x$normal[i+2],x$normal[i+3],x$normal[i+4],x$normal[i+5]),sigma=sig5))
if(l[i]==-Inf){
break
}
}
}
#return(sum(is.na(l))) #number of NA
return(sum(l, na.rm=T))
}
else{
return(-200000)
}
}
else{
return(-100000)
}
}
(gaus_mod <- optim(par=c(0,0,100,0,0,100,0,0,0,0), fn=log_ll_gaussian, x=data, control=list(fnscale=-1), hessian=FALSE, method='BFGS'))
rm(list=ls())
setwd("C:/Users/darcye/OneDrive - Lancaster University/phd/Flood_Barriers/Skew_surge/Code/Updates_2024")
library(fExtremes)
library(R.matlab)
library(dplyr)
library(lubridate)
library(ismev)
library(spatstat)
library(mvtnorm)
ID <- 'LOW'
data <- readRDS(paste0('1_Data/data_', ID, '_mean0.rds'))
seasonal_par <- readRDS(paste0('3_DArcy23/Seasonal_params_',ID,'.rds'))
## datetime needed for markov assumption
m <- c(31,28,31,30,31,30,31,31,30,31,30,31)
m <- c(0,cumsum(m)[1:11])
data$day_m <- data$day - m[data$month]
if( ID != 'SHE'){
data$datetime <- ISOdate(data$year, data$month, data$day_m, data$hour)
}
# Transforming ss margins -------------------------------------------------
setwd("C:/Users/darcye/OneDrive - Lancaster University/phd/Extreme_SL_est/Code/Sea_Levels_Git/ESLestimation/R")
source('get.empiricals.R')
source('skewsurge.dist.R')
source('emp.dist.R')
data$stTide <- ( data$maxTide - mean(data$maxTide) ) / sd(data$maxTide)
data$unif <- c()
empiricals <- get.empiricals(data)
for(i in 1:length(data$skews)){
print(i)
data$unif[i] <- skewsurge.dist(data$skews[i], data$day[i], data$month[i], data$maxTide[i], data$stTide[i], par=seasonal_par, data=data, q=0.95, emp=empiricals)
if(data$unif[i]==0){
break
}
}
i <- 136
data[i,]
View(emp.dist)
emp.dist(data, data$skews[i], data$maxTide[i], 3, empiricals)
View(emp.dist)
View(get.empiricals)
Mar <- data %>% dplyr::filter(month==3)
q1<-sort(Mar$maxTide)[0.333*length(Mar$maxTide)]
q2<-sort(Mar$maxTide)[0.667*length(Mar$maxTide)]
q1
q2
Mar3 <- Mar %>% dplyr::filter( maxTide >q2)
min(Mar$skews)
Z <- seq(min(data$skews)-1,max(data$skews+1),by=0.001) #range of skews
for(i in 1:length(Z)){
F1[i]<-sum(round(Mar1$skews,3)<=Z[i])/length(Mar1$skews)
F2[i]<-sum(round(Mar2$skews,3)<=Z[i])/length(Mar2$skews)
F3[i]<-sum(round(Mar3$skews,3)<=Z[i])/length(Mar3$skews)
}
Mar1 <- Mar %>% dplyr::filter( maxTide <= q1)
Mar2 <- Mar %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Mar3 <- Mar %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Mar1$skews,3)<=Z[i])/length(Mar1$skews)
F2[i]<-sum(round(Mar2$skews,3)<=Z[i])/length(Mar2$skews)
F3[i]<-sum(round(Mar3$skews,3)<=Z[i])/length(Mar3$skews)
}
F1<-F2<-F3<-c()
for(i in 1:length(Z)){
F1[i]<-sum(round(Mar1$skews,3)<=Z[i])/length(Mar1$skews)
F2[i]<-sum(round(Mar2$skews,3)<=Z[i])/length(Mar2$skews)
F3[i]<-sum(round(Mar3$skews,3)<=Z[i])/length(Mar3$skews)
}
Mar3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
Mar3_emp_skews(round(data$skews[i],3))
mnth = 3
q1 <- quantile((data %>% dplyr::filter(month == mnth))$maxTide, 0.333, names=F)
q2 <- quantile((data %>% dplyr::filter(month == mnth))$maxTide, 0.667, names=F)
q1
q2
obs.tide <- data$maxTide[i]
obs.tide
i
i <- 136
obs.tide <- data$maxTide[i]
obs.tide
emp <- empiricals
if(obs.tide<=q1){
return(emp$Mar1_emp_skews(round(value,3)))
}
else if(obs.tide > q1 & obs.tide <= q2){
return(emp$Mar2_emp_skews(round(value,3)))
}
else{
return(emp$Mar3_emp_skews(round(value,3)))
}
if(obs.tide<=q1){
return(emp$Mar1_emp_skews(round(value,3)))
}
else if(obs.tide > q1 & obs.tide <= q2){
return(emp$Mar2_emp_skews(round(value,3)))
}
else{
return(emp$Mar3_emp_skews(round(value,3)))
}
if(obs.tide<=q1){
return(emp$Mar1_emp_skews(round(value,3)))
} else if(obs.tide > q1 & obs.tide <= q2){
return(emp$Mar2_emp_skews(round(value,3)))
} else{
return(emp$Mar3_emp_skews(round(value,3)))
}
value <- data$skews[i]
if(obs.tide<=q1){
return(emp$Mar1_emp_skews(round(value,3)))
} else if(obs.tide > q1 & obs.tide <= q2){
return(emp$Mar2_emp_skews(round(value,3)))
} else{
return(emp$Mar3_emp_skews(round(value,3)))
}
emp$Mar3_emp_skews(round(value,3))
emp.dist(data, data$skews[i], data$maxTide[i], 3, empiricals)
get.empiricals <- function(data){
Jan <- data %>% dplyr::filter(month==1)
Feb <- data %>% dplyr::filter(month==2)
Mar <- data %>% dplyr::filter(month==3)
Apr <- data %>% dplyr::filter(month==4)
May <- data %>% dplyr::filter(month==5)
Jun <- data %>% dplyr::filter(month==6)
Jul <- data %>% dplyr::filter(month==7)
Aug <- data %>% dplyr::filter(month==8)
Sep <- data %>% dplyr::filter(month==9)
Oct <- data %>% dplyr::filter(month==10)
Nov <- data %>% dplyr::filter(month==11)
Dec <- data %>% dplyr::filter(month==12)
Z <- seq(min(data$skews)-1,max(data$skews+1),by=0.001) #range of skews
F1 <- F2 <- F3 <- c()
## Split skew surge empirical distribution into tidal bands associated with 0.33 and 0.67 quantiles
q1 <- sort(Jan$maxTide)[0.333*length(Jan$maxTide)]
q2 <- sort(Jan$maxTide)[0.667*length(Jan$maxTide)]
Jan1 <- Jan %>% dplyr::filter( maxTide <= q1)
Jan2 <- Jan %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Jan3 <- Jan %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Jan1$skews,3)<=Z[i])/length(Jan1$skews)
F2[i]<-sum(round(Jan2$skews,3)<=Z[i])/length(Jan2$skews)
F3[i]<-sum(round(Jan3$skews,3)<=Z[i])/length(Jan3$skews)
}
Jan1_emp_skews <- lut(outputs=round(F1,3),inputs=round(Z,3))
Jan2_emp_skews <- lut(outputs=round(F2,3),inputs=round(Z,3))
Jan3_emp_skews <- lut(outputs=round(F3,3),inputs=round(Z,3))
F1 <- F2<-F3<-c()
q1 <- sort(Feb$maxTide)[0.333*length(Feb$maxTide)]
q2 <- sort(Feb$maxTide)[0.667*length(Feb$maxTide)]
Feb1 <- Feb %>% dplyr::filter( maxTide <= q1)
Feb2 <- Feb %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Feb3 <- Feb %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Feb1$skews,3)<=Z[i])/length(Feb1$skews)
F2[i]<-sum(round(Feb2$skews,3)<=Z[i])/length(Feb2$skews)
F3[i]<-sum(round(Feb3$skews,3)<=Z[i])/length(Feb3$skews)
}
Feb1_emp_skews <- lut(outputs=round(F1,3),inputs=round(Z,3))
Feb2_emp_skews <- lut(outputs=round(F2,3),inputs=round(Z,3))
Feb3_emp_skews <- lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Mar$maxTide)[0.333*length(Mar$maxTide)]
q2<-sort(Mar$maxTide)[0.667*length(Mar$maxTide)]
Mar1 <- Mar %>% dplyr::filter( maxTide <= q1)
Mar2 <- Mar %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Mar3 <- Mar %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Mar1$skews,3)<=Z[i])/length(Mar1$skews)
F2[i]<-sum(round(Mar2$skews,3)<=Z[i])/length(Mar2$skews)
F3[i]<-sum(round(Mar3$skews,3)<=Z[i])/length(Mar3$skews)
}
Mar1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Mar2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Mar3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Apr$maxTide)[0.333*length(Apr$maxTide)]
q2<-sort(Apr$maxTide)[0.667*length(Apr$maxTide)]
Apr1 <- Apr %>% dplyr::filter( maxTide <= q1)
Apr2 <- Apr %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Apr3 <- Apr %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Apr1$skews,3)<=Z[i])/length(Apr1$skews)
F2[i]<-sum(round(Apr2$skews,3)<=Z[i])/length(Apr2$skews)
F3[i]<-sum(round(Apr3$skews,3)<=Z[i])/length(Apr3$skews)
}
Apr1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Apr2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Apr3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(May$maxTide)[0.333*length(May$maxTide)]
q2<-sort(May$maxTide)[0.667*length(May$maxTide)]
May1 <- May %>% dplyr::filter( maxTide <= q1)
May2 <- May %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
May3 <- May %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(May1$skews,3)<=Z[i])/length(May1$skews)
F2[i]<-sum(round(May2$skews,3)<=Z[i])/length(May2$skews)
F3[i]<-sum(round(May3$skews,3)<=Z[i])/length(May3$skews)
}
May1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
May2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
May3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Jun$maxTide)[0.333*length(Jun$maxTide)]
q2<-sort(Jun$maxTide)[0.667*length(Jun$maxTide)]
Jun1 <- Jun %>% dplyr::filter( maxTide <= q1)
Jun2 <- Jun %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Jun3 <- Jun %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Jun1$skews,3)<=Z[i])/length(Jun1$skews)
F2[i]<-sum(round(Jun2$skews,3)<=Z[i])/length(Jun2$skews)
F3[i]<-sum(round(Jun3$skews,3)<=Z[i])/length(Jun3$skews)
}
Jun1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Jun2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Jun3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Jul$maxTide)[0.333*length(Jul$maxTide)]
q2<-sort(Jul$maxTide)[0.667*length(Jul$maxTide)]
Jul1 <- Jul %>% dplyr::filter( maxTide <= q1)
Jul2 <- Jul %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Jul3 <- Jul %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Jul1$skews,3)<=Z[i])/length(Jul1$skews)
F2[i]<-sum(round(Jul2$skews,3)<=Z[i])/length(Jul2$skews)
F3[i]<-sum(round(Jul3$skews,3)<=Z[i])/length(Jul3$skews)
}
Jul1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Jul2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Jul3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Aug$maxTide)[0.333*length(Aug$maxTide)]
q2<-sort(Aug$maxTide)[0.667*length(Aug$maxTide)]
Aug1 <- Aug %>% dplyr::filter( maxTide <= q1)
Aug2 <- Aug %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Aug3 <- Aug %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Aug1$skews,3)<=Z[i])/length(Aug1$skews)
F2[i]<-sum(round(Aug2$skews,3)<=Z[i])/length(Aug2$skews)
F3[i]<-sum(round(Aug3$skews,3)<=Z[i])/length(Aug3$skews)
}
Aug1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Aug2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Aug3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Sep$maxTide)[0.333*length(Sep$maxTide)]
q2<-sort(Sep$maxTide)[0.667*length(Sep$maxTide)]
Sep1 <- Sep %>% dplyr::filter( maxTide <= q1)
Sep2 <- Sep %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Sep3 <- Sep %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Sep1$skews,3)<=Z[i])/length(Sep1$skews)
F2[i]<-sum(round(Sep2$skews,3)<=Z[i])/length(Sep2$skews)
F3[i]<-sum(round(Sep3$skews,3)<=Z[i])/length(Sep3$skews)
}
Sep1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Sep2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Sep3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Oct$maxTide)[0.333*length(Oct$maxTide)]
q2<-sort(Oct$maxTide)[0.667*length(Oct$maxTide)]
Oct1 <- Oct %>% dplyr::filter( maxTide <= q1)
Oct2 <- Oct %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Oct3 <- Oct %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Oct1$skews,3)<=Z[i])/length(Oct1$skews)
F2[i]<-sum(round(Oct2$skews,3)<=Z[i])/length(Oct2$skews)
F3[i]<-sum(round(Oct3$skews,3)<=Z[i])/length(Oct3$skews)
}
Oct1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Oct2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Oct3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Nov$maxTide)[0.333*length(Nov$maxTide)]
q2<-sort(Nov$maxTide)[0.667*length(Nov$maxTide)]
Nov1 <- Nov %>% dplyr::filter( maxTide <= q1)
Nov2 <- Nov %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Nov3 <- Nov %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Nov1$skews,3)<=Z[i])/length(Nov1$skews)
F2[i]<-sum(round(Nov2$skews,3)<=Z[i])/length(Nov2$skews)
F3[i]<-sum(round(Nov3$skews,3)<=Z[i])/length(Nov3$skews)
}
Nov1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Nov2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Nov3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
F1<-F2<-F3<-c()
q1<-sort(Dec$maxTide)[0.333*length(Dec$maxTide)]
q2<-sort(Dec$maxTide)[0.667*length(Dec$maxTide)]
Dec1 <- Dec %>% dplyr::filter( maxTide <= q1)
Dec2 <- Dec %>% dplyr::filter( maxTide > q1 & maxTide <= q2)
Dec3 <- Dec %>% dplyr::filter( maxTide >q2)
for(i in 1:length(Z)){
F1[i]<-sum(round(Dec1$skews,3)<=Z[i])/length(Nov1$skews)
F2[i]<-sum(round(Dec2$skews,3)<=Z[i])/length(Nov2$skews)
F3[i]<-sum(round(Dec3$skews,3)<=Z[i])/length(Nov3$skews)
}
Dec1_emp_skews<-lut(outputs=round(F1,3),inputs=round(Z,3))
Dec2_emp_skews<-lut(outputs=round(F2,3),inputs=round(Z,3))
Dec3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
## Put into a named list
empiricals <- list(Jan1_emp_skews, Jan2_emp_skews, Jan3_emp_skews,
Feb1_emp_skews, Feb2_emp_skews, Feb3_emp_skews,
Mar1_emp_skews, Mar2_emp_skews, Mar3_emp_skews,
Apr1_emp_skews, Apr2_emp_skews, Apr3_emp_skews,
May1_emp_skews, May2_emp_skews, May3_emp_skews,
Jun1_emp_skews, Jun2_emp_skews, Jun3_emp_skews,
Jul1_emp_skews, Jul2_emp_skews, Jul3_emp_skews,
Aug1_emp_skews, Aug2_emp_skews, Aug3_emp_skews,
Sep1_emp_skews, Sep2_emp_skews, Sep3_emp_skews,
Oct1_emp_skews, Oct2_emp_skews, Oct3_emp_skews,
Nov1_emp_skews, Nov2_emp_skews, Nov3_emp_skews,
Dec1_emp_skews, Dec2_emp_skews, Dec3_emp_skews)
names(empiricals) <- c('Jan1_emp_skews', 'Jan2_emp_skews', 'Jan3_emp_skews',
'Feb1_emp_skews', 'Feb2_emp_skews', 'Feb3_emp_skews',
'Mar1_emp_skews', 'Mar2_emp_skews', 'Mar3_emp_skews',
'Apr1_emp_skews', 'Apr2_emp_skews', 'Apr3_emp_skews',
'May1_emp_skews', 'May2_emp_skews', 'May3_emp_skews',
'Jun1_emp_skews', 'Jun2_emp_skews', 'Jun3_emp_skews',
'Jul1_emp_skews', 'Jul2_emp_skews', 'Jul3_emp_skews',
'Aug1_emp_skews', 'Aug2_emp_skews', 'Aug3_emp_skews',
'Sep1_emp_skews', 'Sep2_emp_skews', 'Sep3_emp_skews',
'Oct1_emp_skews', 'Oct2_emp_skews', 'Oct3_emp_skews',
'Nov1_emp_skews', 'Nov2_emp_skews', 'Nov3_emp_skews',
'Dec1_emp_skews', 'Dec2_emp_skews', 'Dec3_emp_skews')
return(empiricals)
}
empiricals <- get.empiricals(data)
emp.dist(data, data$skews[i], data$maxTide[i], 3, empiricals)
i
Mar3_emp_skews(round(data$skews[i],3))
Mar
q1
q2
Mar3_emp_skews
min(Mar3$skews)
data$skews[i]
for(i in 1:length(Z)){
F1[i] <- sum(round(Mar1$skews,3)<=Z[i])/length(Mar1$skews)
F2[i] <- sum(round(Mar2$skews,3)<=Z[i])/length(Mar2$skews)
F3[i] <- max(sum(round(Mar3$skews,3)<=Z[i])/length(Mar3$skews), 1/length(Mar3$skews))
}
Mar3_emp_skews<-lut(outputs=round(F3,3),inputs=round(Z,3))
Mar3_emp_skews(round(data$skews[i],3))
Mar3_emp_skews(round(data$skews[136],3))
1/length(Mar3$skews)
rm(list=ls())
setwd("C:/Users/darcye/OneDrive - Lancaster University/phd/Flood_Barriers/Skew_surge/Code/Updates_2024")
library(fExtremes)
library(R.matlab)
library(dplyr)
library(lubridate)
library(ismev)
library(spatstat)
library(mvtnorm)
ID <- 'LOW'
data <- readRDS(paste0('1_Data/data_', ID, '_mean0.rds'))
seasonal_par <- readRDS(paste0('3_DArcy23/Seasonal_params_',ID,'.rds'))
## datetime needed for markov assumption
m <- c(31,28,31,30,31,30,31,31,30,31,30,31)
m <- c(0,cumsum(m)[1:11])
data$day_m <- data$day - m[data$month]
if( ID != 'SHE'){
data$datetime <- ISOdate(data$year, data$month, data$day_m, data$hour)
}
# Transforming ss margins -------------------------------------------------
setwd("C:/Users/darcye/OneDrive - Lancaster University/phd/Extreme_SL_est/Code/Sea_Levels_Git/ESLestimation/R")
source('get.empiricals.R')
source('skewsurge.dist.R')
source('emp.dist.R')
data$stTide <- ( data$maxTide - mean(data$maxTide) ) / sd(data$maxTide)
data$unif <- c()
empiricals <- get.empiricals(data)
emp.dist(data, data$skews[i], data$maxTide[i], 3, empiricals)
for(i in 1:length(data$skews)){
print(i)
data$unif[i] <- skewsurge.dist(data$skews[i], data$day[i], data$month[i], data$maxTide[i], data$stTide[i], par=seasonal_par, data=data, q=0.95, emp=empiricals)
if(data$unif[i]==0){
break
}
}
emp.dist(data, data$skews[i], data$maxTide[i], 3, empiricals)
i
data[i,]
emp.dist(data, data$skews[i], data$maxTide[i], 4, empiricals)
rm(list=ls())
setwd("C:/Users/darcye/OneDrive - Lancaster University/phd/Flood_Barriers/Skew_surge/Code/Updates_2024")
library(fExtremes)
library(R.matlab)
library(dplyr)
library(lubridate)
library(ismev)
library(spatstat)
library(mvtnorm)
ID <- 'LOW'
data <- readRDS(paste0('1_Data/data_', ID, '_mean0.rds'))
seasonal_par <- readRDS(paste0('3_DArcy23/Seasonal_params_',ID,'.rds'))
## datetime needed for markov assumption
m <- c(31,28,31,30,31,30,31,31,30,31,30,31)
m <- c(0,cumsum(m)[1:11])
data$day_m <- data$day - m[data$month]
if( ID != 'SHE'){
data$datetime <- ISOdate(data$year, data$month, data$day_m, data$hour)
}
# Transforming ss margins -------------------------------------------------
setwd("C:/Users/darcye/OneDrive - Lancaster University/phd/Extreme_SL_est/Code/Sea_Levels_Git/ESLestimation/R")
source('get.empiricals.R')
source('skewsurge.dist.R')
source('emp.dist.R')
data$stTide <- ( data$maxTide - mean(data$maxTide) ) / sd(data$maxTide)
data$unif <- c()
empiricals <- get.empiricals(data)
emp.dist(data, data$skews[i], data$maxTide[i], 4, empiricals)
for(i in 1:length(data$skews)){
print(i)
data$unif[i] <- skewsurge.dist(data$skews[i], data$day[i], data$month[i], data$maxTide[i], data$stTide[i], par=seasonal_par, data=data, q=0.95, emp=empiricals)
if(data$unif[i]==0){
break
}
}
